package net.minetrek.blocks.machines;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

// Date: 1/1/2014 12:02:46 AM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

public class LaserElectronManipulatorTileEntityModel extends ModelBase {
	// fields
	ModelRenderer Top_Block;
	ModelRenderer Back_Left_Foot;
	ModelRenderer Back_Right_Strut;
	ModelRenderer Front_Right_Foot;
	ModelRenderer Front_Left_Foot;
	ModelRenderer Back_Right_Foot;
	ModelRenderer Back_Left_Strut;
	ModelRenderer Front_Right_Strut;
	ModelRenderer Style;
	ModelRenderer Base;
	ModelRenderer Upper_Platform;
	ModelRenderer Front_Left_Strut;

	public LaserElectronManipulatorTileEntityModel() {
		textureWidth = 64;
		textureHeight = 64;

		Top_Block = new ModelRenderer(this, 0, 19);
		Top_Block.addBox(0F, 0F, 0F, 10, 3, 10);
		Top_Block.setRotationPoint(-5F, -16F, -5F);
		Top_Block.setTextureSize(64, 64);
		Top_Block.mirror = true;
		setRotation(Top_Block, 0F, 0F, 0F);
		Back_Left_Foot = new ModelRenderer(this, 0, 0);
		Back_Left_Foot.addBox(0F, 0F, 0F, 4, 2, 4);
		Back_Left_Foot.setRotationPoint(4F, -2F, 4F);
		Back_Left_Foot.setTextureSize(64, 64);
		Back_Left_Foot.mirror = true;
		setRotation(Back_Left_Foot, 0F, 0F, 0F);
		Back_Right_Strut = new ModelRenderer(this, 56, 19);
		Back_Right_Strut.addBox(0F, 0F, 0F, 2, 8, 2);
		Back_Right_Strut.setRotationPoint(-8F, -10F, 6F);
		Back_Right_Strut.setTextureSize(64, 64);
		Back_Right_Strut.mirror = true;
		setRotation(Back_Right_Strut, 0F, 0F, 0F);
		Front_Right_Foot = new ModelRenderer(this, 0, 0);
		Front_Right_Foot.addBox(0F, 0F, 0F, 4, 2, 4);
		Front_Right_Foot.setRotationPoint(-8F, -2F, -8F);
		Front_Right_Foot.setTextureSize(64, 64);
		Front_Right_Foot.mirror = true;
		setRotation(Front_Right_Foot, 0F, 0F, 0F);
		Front_Left_Foot = new ModelRenderer(this, 0, 0);
		Front_Left_Foot.addBox(0F, 0F, 0F, 4, 2, 4);
		Front_Left_Foot.setRotationPoint(4F, -2F, -8F);
		Front_Left_Foot.setTextureSize(64, 64);
		Front_Left_Foot.mirror = true;
		setRotation(Front_Left_Foot, 0F, 0F, 0F);
		Back_Right_Foot = new ModelRenderer(this, 0, 0);
		Back_Right_Foot.addBox(0F, 0F, 0F, 4, 2, 4);
		Back_Right_Foot.setRotationPoint(-8F, -2F, 4F);
		Back_Right_Foot.setTextureSize(64, 64);
		Back_Right_Foot.mirror = true;
		setRotation(Back_Right_Foot, 0F, 0F, 0F);
		Back_Left_Strut = new ModelRenderer(this, 56, 19);
		Back_Left_Strut.addBox(0F, 0F, 0F, 2, 8, 2);
		Back_Left_Strut.setRotationPoint(6F, -10F, 6F);
		Back_Left_Strut.setTextureSize(64, 64);
		Back_Left_Strut.mirror = true;
		setRotation(Back_Left_Strut, 0F, 0F, 0F);
		Front_Right_Strut = new ModelRenderer(this, 56, 19);
		Front_Right_Strut.addBox(0F, 0F, 0F, 2, 8, 2);
		Front_Right_Strut.setRotationPoint(-8F, -10F, -8F);
		Front_Right_Strut.setTextureSize(64, 64);
		Front_Right_Strut.mirror = true;
		setRotation(Front_Right_Strut, 0F, 0F, 0F);
		Style = new ModelRenderer(this, 48, 19);
		Style.addBox(0F, 0F, 0F, 2, 11, 2);
		Style.setRotationPoint(-1F, -18F, -1F);
		Style.setTextureSize(64, 64);
		Style.mirror = true;
		setRotation(Style, 0F, 0F, 0F);
		Base = new ModelRenderer(this, 0, 45);
		Base.addBox(0F, 0F, 0F, 16, 3, 16);
		Base.setRotationPoint(-8F, 0F, -8F);
		Base.setTextureSize(64, 64);
		Base.mirror = true;
		setRotation(Base, 0F, 0F, 0F);
		Upper_Platform = new ModelRenderer(this, 0, 0);
		Upper_Platform.addBox(0F, 0F, 0F, 16, 3, 16);
		Upper_Platform.setRotationPoint(-8F, -13F, -8F);
		Upper_Platform.setTextureSize(64, 64);
		Upper_Platform.mirror = true;
		setRotation(Upper_Platform, 0F, 0F, 0F);
		Front_Left_Strut = new ModelRenderer(this, 56, 19);
		Front_Left_Strut.addBox(0F, 0F, 0F, 2, 8, 2);
		Front_Left_Strut.setRotationPoint(6F, -10F, -8F);
		Front_Left_Strut.setTextureSize(64, 64);
		Front_Left_Strut.mirror = true;
		setRotation(Front_Left_Strut, 0F, 0F, 0F);
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		Top_Block.render(f5);
		Back_Left_Foot.render(f5);
		Back_Right_Strut.render(f5);
		Front_Right_Foot.render(f5);
		Front_Left_Foot.render(f5);
		Back_Right_Foot.render(f5);
		Back_Left_Strut.render(f5);
		Front_Right_Strut.render(f5);
		Style.render(f5);
		Base.render(f5);
		Upper_Platform.render(f5);
		Front_Left_Strut.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
	}

}
